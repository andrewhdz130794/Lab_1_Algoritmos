mutate( data, datetime = ymd_hms(datetime),
day = day(datetime),
month = month(datetime),
year = year(datetime),
hour = hour(datetime),
minute = minute(datetime)
)
# Librerias que utilizaremos
#install.packages("tidyverse")
library(tidyverse)
devtools::install_github("r-lib/conflicted")
install.packages("dbplyr")
# Visualizar los datos
View(data)
# Visualizar las primeras filas con las nuevas columnas
# Visualizar las primeras filas con las nuevas columnas
View(data)
Visualizar las primeras filas con las nuevas columnas
mutate(
datetime = ymd_hms(dteday),
day = day(dteday),
month = month(dteday),
year = year(dteday),
#hour = hour(datetime),
#minute = minute(datetime)
)
data <- as_tibble(data)
library(tidyverse)
library(lubridate)
library(dbplyr)
data <- read.csv("C:\\Users\\andre\\Downloads\\lab2\\lab2\\dataset.csv")
data <- as_tibble(data)
View(data)
data <- data %>%
mutate(
datetime = ymd_hms(dteday),
day = day(dteday),
month = month(dteday),
year = year(dteday),
#hour = hour(datetime),
#minute = minute(datetime)
)
data <- data %>%
mutate(
#datetime = ymd_hms(dteday),
day = day(dteday),
month = month(dteday),
year = year(dteday),
#hour = hour(datetime),
#minute = minute(datetime)
)
View(data)
data <- data %>%
mutate(
datetime = ymd_hms(dteday),
day = day(dteday),
month = month(dteday),
year = year(dteday),
hour = hour(datetime),
minute = minute(datetime)
)
View(data)
monthly_demand <- data %>%
group_by(month) %>%
summarise(total_rentals = sum(count))
max_demand_month <- monthly_demand %>%
filter(total_rentals == max(total_rentals))
monthly_demand <- data %>%
group_by(month) %>%
summarise(total_rentals = n())
monthly_demand <- data %>%
group_by(month) %>%
summarise(conteo = n())
monthly_demand <- data %>%
group_by(month) %>%
summarise(conteo = n())
max_demand_month <- monthly_demand %>%
filter(total_rentals == max(conteo))
max_demand_month <- monthly_demand %>%
filter(conteo == max(conteo))
print(monthly_demand)
ggplot(monthly_demand, aes(x = month, y = conteo)) +
geom_bar(stat = "identity") +
labs(title = "Total de Rentas por Mes", x = "Mes", y = "Total de Rentas")
# Agrupar por mes y sumar las rentas
monthly_demand <- data %>%
group_by(month) %>%
summarise(total_rentals = sum(total_rentals))
# Agrupar por mes y sumar las rentas
monthly_demand <- data %>%
group_by(month) %>%
summarise(total_rentals = n())
# Mes con mayor demanda
max_demand_month <- monthly_demand %>%
filter(total_rentals == max(total_rentals))
# Mostrar la tabla y la gráfica
print(monthly_demand)
ggplot(monthly_demand, aes(x = month, y = total_rentals)) +
geom_bar(stat = "identity") +
labs(title = "Total de Rentas por Mes", x = "Mes", y = "Total de Rentas")
# Agrupar por mes y sumar las rentas
monthly_demand <- data %>%
group_by(month) %>%
summarise(total_rentals = n())
# Mes con mayor demanda
max_demand_month <- monthly_demand %>%
filter(total_rentals == max(total_rentals))
# Mostrar la tabla y la gráfica
print(monthly_demand)
ggplot(monthly_demand, aes(x = month, y = total_rentals)) +
geom_bar(stat = "identity") +
geom_text(aes(label = total_rentals), vjust = -0.5) +
labs(title = "Total de Rentas por Mes", x = "Mes", y = "Total de Rentas")
print(max_demand_month)
# Creamos una variable para almacenarr el conteo de los meses
renta_mensual <- data %>%
group_by(month) %>%
summarise(conteo_mensual = n())
# Filtramos para que solo aparezcan los meses con mayor demanda
mayor_demanda <- conteo_mes %>%
filter(conteo_mensual == max(conteo_mensual))
# Creamos una variable para almacenarr el conteo de los meses
renta_mensual <- data %>%
group_by(month) %>%
summarise(conteo_mensual = n())
# Filtramos para que solo aparezcan los meses con mayor demanda
mayor_demanda <- renta_mensual %>%
filter(conteo_mensual == max(conteo_mensual))
# Mostrar la tabla y la gráfica
print(mayor_demanda)
ggplot(mayor_demanda, aes(x = month, y = conteo_mensual)) +
geom_bar(stat = "identity") +
geom_text(aes(label = total_rentals), vjust = -0.5) +
labs(title = "Total de Rentas por Mes", x = "Mes", y = "Total de Rentas")
# Creamos una variable para almacenarr el conteo de los meses
renta_mensual <- data %>%
group_by(month) %>%
summarise(conteo_mensual = n())
# Filtramos para que solo aparezcan los meses con mayor demanda
mayor_demanda <- renta_mensual %>%
filter(conteo_mensual == max(conteo_mensual))
# Mostrar la tabla y la gráfica
print(mayor_demanda)
ggplot(mayor_demanda, aes(x = month, y = conteo_mensual)) +
geom_bar(stat = "identity") +
geom_text(aes(label = conteo_mensual), vjust = -0.5) +
labs(title = "Total de Rentas por Mes", x = "Mes", y = "Total de Rentas")
install.packages("rmarkdown")
library(tidyverse)
library(lubridate)
library(dbplyr)
data <- read.csv("C:\\Users\\andre\\Downloads\\lab2\\lab2\\dataset.csv")
data <- as_tibble(data)
data <- as_tibble(data)
View(data)
# creamos las columnas que necesitamos para contestar las preguntas
data <- data %>%
mutate(
datetime = ymd_hms(dteday),
day = day(dteday),
month = month(dteday),
year = year(dteday),
hour = hour(datetime),
minute = minute(datetime)
)
# comprobamos si se agregaron los campos que necesitamos
View(data)
# Creamos una variable para almacenarr el conteo de los meses
renta_mensual <- data %>%
group_by(month) %>%
summarise(conteo_mensual = n())
# Filtramos para que solo aparezcan los meses con mayor demanda
mayor_demanda <- renta_mensual %>%
filter(conteo_mensual == max(conteo_mensual))
# Mostrar la tabla y la gráfica
print(mayor_demanda)
ggplot(mayor_demanda, aes(x = month, y = conteo_mensual)) +
geom_bar(stat = "identity") +
geom_text(aes(label = conteo_mensual), vjust = -0.5) +
labs(title = "Total de Rentas por Mes", x = "Mes", y = "Total de Rentas")
# Agrupar por hora y sumar las rentas
horario_demanda <- data %>%
group_by(hr) %>%
summarise(conteo_horas = n())
# Rango de horas con mayor demanda
mayor_demanda_houra <- horario_demanda %>%
filter(conteo_horas == max(conteo_horas))
# Mostrar la tabla y la gráfica
print(mayor_demanda_houra)
ggplot(mayor_demanda_houra, aes(x = hour, y = conteo_horas)) +
geom_bar(stat = "identity") +
labs(title = "Total de Rentas por Hora", x = "Hora", y = "Demanda")
# Agrupar por hora y sumar las rentas
horario_demanda <- data %>%
group_by(hr) %>%
summarise(conteo_horas = n())
# Rango de horas con mayor demanda
mayor_demanda_houra <- horario_demanda %>%
filter(conteo_horas == max(conteo_horas))
# Mostrar la tabla y la gráfica
print(mayor_demanda_houra)
ggplot(mayor_demanda_houra, aes(x = hr, y = conteo_horas)) +
geom_bar(stat = "identity") +
labs(title = "Total de Rentas por Hora", x = "Hora", y = "Demanda")
mayor_demanda_houra <- horario_demanda %>%
filter(conteo_horas == max(conteo_horas))
# Mostrar la tabla y la gráfica
print(mayor_demanda_houra)
ggplot(mayor_demanda_houra, aes(x = hr, y = conteo_horas)) +
geom_bar(stat = "identity") +
geom_text(aes(label = conteo_horas), vjust = -0.5) +
labs(title = "Total de Rentas por Hora", x = "Hora", y = "Demanda")
# Agrupar por temporada y contamos
temporada_demanda <- data %>%
group_by(season) %>%
summarise( conteo_temporada = n())
# Temporada con mayor demanda
mayor_demanda_temporada <- seasonal_demand %>%
filter(conteo_temporada == max(conteo_temporada))
# Agrupar por temporada y contamos
temporada_demanda <- data %>%
group_by(season) %>%
summarise( conteo_temporada = n())
# Temporada con mayor demanda
mayor_demanda_temporada <- temporada_demanda %>%
filter(conteo_temporada == max(conteo_temporada))
# Mostrar la tabla
print(mayor_demanda_temporada)
# Agrupar por temporada y contamos
temporada_demanda <- data %>%
group_by(season, year) %>%
summarise( conteo_temporada = n())
# Temporada con mayor demanda
mayor_demanda_temporada <- temporada_demanda %>%
filter(conteo_temporada == max(conteo_temporada))
# Mostrar la tabla
print(mayor_demanda_temporada)
# Agrupar por temperatura y contamos
temperatura_demanda <- data %>%
group_by(temp) %>%
summarise(conteo_temperatura = n())
# Filtramos el Rango de horas con menor demanda
menor_demanda_temp <- temperatura_demanda %>%
filter(conteo_temperatura == min(conteo_temperatura))
# Gráfica de temperatura vs demanda
ggplot(temperatura_demanda, aes(x = temp, y = conteo_temperatura)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "loess", color = "blue") +
geom_text(aes(label = conteo_temperatura), vjust = -0.5) +
labs(title = "Demanda vs Temperatura", x = "Temperatura (°C)", y = "Demanda")
print(menor_demanda_temp)
# Gráfica de temperatura vs demanda
ggplot(data, aes(x = temp, y = count)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "loess", color = "blue") +
labs(title = "Demanda vs Temperatura", x = "Temperatura (°C)", y = "Demanda")
# Gráfica de temperatura vs demanda
ggplot(temperatura_demanda, aes(x = temp, y = conteo_temperatura)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "loess", color = "blue") +
labs(title = "Demanda vs Temperatura", x = "Temperatura (°C)", y = "Demanda")
# Agrupar por temperatura y contamos
temperatura_demanda <- data %>%
group_by(temp) %>%
summarise(conteo_temperatura = n())
# Filtramos el Rango de horas con menor demanda
menor_demanda_temp <- temperatura_demanda %>%
filter(conteo_temperatura == min(conteo_temperatura))
# Gráfica de temperatura vs demanda
ggplot(temperatura_demanda, aes(x = temp, y = conteo_temperatura)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "loess", color = "blue") +
labs(title = "Demanda vs Temperatura", x = "Temperatura (°C)", y = "Demanda")
# Mostrar la tabla
print(menor_demanda_temp)
# Gráfica de temperatura vs demanda
ggplot(temperatura_demanda, aes(x = temp, y = conteo_temperatura)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "loess", color = "blue") +
labs(title = "Demanda vs Temperatura", x = "Temperatura (Celsius)", y = "Demanda")
# Agrupar por temporada y contamos
temporada_demanda <- data %>%
group_by(season) %>%
summarise( conteo_temporada = sum(cnt))
# Temporada con mayor demanda
mayor_demanda_temporada <- temporada_demanda %>%
filter(conteo_temporada == max(conteo_temporada))
# Mostrar la tabla
print(mayor_demanda_temporada)
# Agrupar por hora y contamos
horario_demanda <- data %>%
group_by(hr) %>%
summarise(conteo_horas =sum(cnt))
# Filtramos el Rango de horas con mayor demanda
mayor_demanda_houra <- horario_demanda %>%
filter(conteo_horas == max(conteo_horas))
# Mostramos la tabla y la gráfica
print(mayor_demanda_houra)
ggplot(mayor_demanda_houra, aes(x = hr, y = conteo_horas)) +
geom_bar(stat = "identity") +
geom_text(aes(label = conteo_horas), vjust = -0.5) +
labs(title = "Total de Rentas por Hora", x = "Hora", y = "Demanda")
# Creamos una variable para almacenarr el conteo de los meses
renta_mensual <- data %>%
group_by(month) %>%
summarise(conteo_mensual =sum(cnt))
# Filtramos para que solo aparezcan los meses con mayor demanda
mayor_demanda <- renta_mensual %>%
filter(conteo_mensual == max(conteo_mensual))
# Mostramos la tabla y la gráfica
print(mayor_demanda)
ggplot(mayor_demanda, aes(x = month, y = conteo_mensual)) +
geom_bar(stat = "identity") +
geom_text(aes(label = conteo_mensual), vjust = -0.5) +
labs(title = "Total de Rentas por Mes", x = "Mes", y = "Total de Rentas")
# Agrupar por temperatura y contamos
temperatura_demanda <- data %>%
group_by(temp) %>%
summarise(conteo_temperatura = sum(cnt))
# Filtramos el Rango de horas con menor demanda
menor_demanda_temp <- temperatura_demanda %>%
filter(conteo_temperatura == min(conteo_temperatura))
# Gráfica de temperatura vs demanda
ggplot(temperatura_demanda, aes(x = temp, y = conteo_temperatura)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "loess", color = "blue") +
labs(title = "Demanda vs Temperatura", x = "Temperatura (Celsius)", y = "Demanda")
# Mostrar la tabla
print(menor_demanda_temp)
# Agrupar por temperatura y contamos
humedad_demanda <- data %>%
group_by(hum) %>%
summarise(conteo_humedad = sum(cnt))
# Filtramos el Rango de horas con menor demanda
menor_demanda_hum <- humedad_demanda %>%
filter(conteo_temperatura == min(conteo_humedad))
# Agrupar por temperatura y contamos
humedad_demanda <- data %>%
group_by(hum) %>%
summarise(conteo_humedad = sum(cnt))
# Filtramos el Rango de horas con menor demanda
menor_demanda_hum <- humedad_demanda %>%
filter(conteo_humedad == min(conteo_humedad))
# Gráfica de temperatura vs demanda
ggplot(temperatura_demanda, aes(x = temp, y = conteo_temperatura)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "loess", color = "blue") +
labs(title = "Demanda vs Humedad", x = "Humedad", y = "Demanda")
# Mostrar la tabla
print(menor_demanda_hum)
# Gráfica de temperatura vs demanda
ggplot(temperatura_demanda, aes(x = temp, y = conteo_temperatura)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "loess", formula = y ~ x, message = FALSE, color = "blue") +
labs(title = "Demanda vs Humedad", x = "Humedad", y = "Demanda")
# Gráfica de temperatura vs demanda
ggplot(temperatura_demanda, aes(x = temp, y = conteo_temperatura)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "loess", formula = y ~ x, message = FALSE, color = "blue") +
labs(title = "Demanda vs Humedad", x = "Humedad", y = "Demanda")
ggplot(temperatura_demanda, aes(x = temp, y = conteo_temperatura)) +
geom_point(alpha = 0.5) +
geom_smooth() +
labs(title = "Demanda vs Humedad", x = "Humedad", y = "Demanda")
ggplot(temperatura_demanda, aes(x = temp, y = conteo_temperatura)) +
geom_point(alpha = 0.5) +
geom_smooth(method = 'loess', formula = 'y ~ x') +
labs(title = "Demanda vs Humedad", x = "Humedad", y = "Demanda")
ggplot(temperatura_demanda, aes(x = temp, y = conteo_temperatura)) +
geom_point(alpha = 0.5) +
geom_smooth() +
labs(title = "Demanda vs Humedad", x = "Humedad", y = "Demanda")
ggplot(data, aes(x = temp, y = hum)) +
geom_density2d_filled() +
labs(title = "Densidad Bivariable de Temperatura y Humedad", x = "Temperatura (Celsius)", y = "Humedad (%)")
condiciones_climaticas <- data %>%
group_by(tem,hum) %>%
summarise(conteo_condicion = sum(cnt))
condiciones_climaticas <- data %>%
group_by(tem, hum) %>%
summarise(conteo_condicion = sum(cnt))
condiciones_climaticas <- data %>%
group_by(temp, hum) %>%
summarise(conteo_condicion = sum(cnt))
mejor_condicion_climatica <- condiciones_climaticas %>%
arrange(desc(conteo_condicion)
head(mejor_condicion_climatica, n = 10)
mejor_condicion_climatica <- condiciones_climaticas %>%
arrange(desc(conteo_condicion))
head(mejor_condicion_climatica, n = 10)
# Gráfica de densidad bivariable de temperatura y humedad
ggplot(data, aes(x = temp, y = hum*100)) +
geom_density2d_filled() +
labs(title = "Densidad Bivariable de Temperatura y Humedad", x = "Temperatura (Celsius)", y = "Humedad (%)")
# Gráfica de densidad bivariable de temperatura y humedad
ggplot(data, aes(x = temp * 100, y = hum*100)) +
geom_density2d_filled() +
labs(title = "Densidad Bivariable de Temperatura y Humedad", x = "Temperatura (Celsius)", y = "Humedad (%)")
condiciones_climaticas <- data %>%
group_by(atemp, hum) %>%
summarise(conteo_condicion = sum(cnt))
# Filtramos el Rango de horas con menor demanda
mejor_condicion_climatica <- condiciones_climaticas %>%
arrange(desc(conteo_condicion))
head(mejor_condicion_climatica, n = 10)
# Gráfica de densidad bivariable de temperatura y humedad
ggplot(data, aes(x = atemp * 100, y = hum*100)) +
geom_density2d_filled() +
labs(title = "Densidad Bivariable de Temperatura y Humedad", x = "Temperatura (Celsius)", y = "Humedad (%)")
ggplot(data, aes(x = sum(cnt))) +
geom_density(fill = "blue", alpha = 0.5) +
geom_text(aes(label = sum(cnt)), vjust = -0.5) +
labs(title = "Densidad de Rentas", x = "Cantidad de Rentas", y = "Densidad")
densidad_renta <- data %>%
group_by(year) %>%
summarise(conteo_anual =sum(cnt))
# Gráfica de densidad de rentas
ggplot(densidad_renta, aes(x = year, y = conteo_anual) +
geom_density(fill = "blue", alpha = 0.5) +
geom_text(aes(label = sum(cnt)), vjust = -0.5) +
labs(title = "Densidad de Rentas", x = "Cantidad de Rentas", y = "Densidad")
mejor_condicion_climatica <- condiciones_climaticas %>%
condiciones_climaticas <- data %>%
group_by(atemp, hum) %>%
summarise(conteo_condicion = sum(cnt))
mejor_condicion_climatica <- condiciones_climaticas %>%
arrange(desc(conteo_condicion))
head(mejor_condicion_climatica, n = 10)
ggplot(data, aes(x = cnt)) +
geom_density(fill = "blue", alpha = 0.5) +
labs(title = "Densidad de Rentas", x = "Cantidad de Rentas", y = "Densidad")
mean_registered <- mean(data$casual)
print(mean_registered)
promedio_estacion <- data %>%
group_by(season) %>%
summarise(total_rentals = sum(cnt), average_rentals = mean(cnt))
# Mostrar la tabla
print(promedio_estacion)
promedio_estacion <- data %>%
group_by(season) %>%
summarise(total_rentas = sum(cnt), promedio_rentas = mean(cnt))
# Mostrar la tabla
print(promedio_estacion)
# Gráfica de barras de rentas por temporada
ggplot(promedio_estacion, aes(x = season, y = total_rentas)) +
geom_bar(stat = "identity", fill = "blue") +
labs(title = "Rentas por Temporada", x = "Temporada", y = "Total de Rentas")
# Gráfica de barras de rentas por temporada
ggplot(promedio_estacion, aes(x = season, y = total_rentas)) +
geom_bar(stat = "identity", fill = "blue") +
geom_text(aes(label = total_rentas), vjust = -0.5) +
labs(title = "Rentas por Temporada", x = "Temporada", y = "Total de Rentas")
# Gráfica de densidad por hora
ggplot(data, aes(x = hr, y = ..density..)) +
geom_density() +
labs(title = "Densidad por Hora", x = "Hora", y = "Densidad")
# Gráfica de densidad por hora
ggplot(data, aes(x = hr, y = ..density..)) +
geom_density(fill = "blue", alpha = 0.5) +
labs(title = "Densidad por Hora", x = "Hora", y = "Densidad")
ggplot(data, aes(x = day, y = cnt)) +
geom_bar(stat = "identity", fill = "blue") +
geom_text(aes(label = cnt), vjust = -0.5) +
labs(title = "Rentas por Día del Mes", x = "Día del Mes", y = "Total de Rentas")
ggplot(data, aes(x = day, y = cnt)) +
geom_bar(stat = "identity", fill = "blue") +
labs(title = "Rentas por Día del Mes", x = "Día del Mes", y = "Total de Rentas")
ggplot(data, aes(x = day, y = cnt)) +
geom_bar(stat = "identity", fill = "blue") +
labs(title = "Rentas por Dia del Mes", x = "Día del Mes", y = "Total de Rentas")
ggplot(data, aes(x = day, y = cnt)) +
geom_bar(stat = "identity", fill = "blue") +
labs(title = "Rentas por Dia del Mes", x = "Dia del Mes", y = "Total de Rentas")
#
ggplot(data, aes(x = month, y = cnt)) +
geom_line(color = "blue") +
labs(title = "Serie Temporal de Rentas", x = "Fecha", y = "Total de Rentas")
ggplot(data, aes(x = month, y = cnt)) +
geom_bar(color = "blue") +
labs(title = "Serie Temporal de Rentas", x = "Fecha", y = "Total de Rentas")
ggplot(data, aes(x = dteday, y = cnt)) +
geom_line(color = "blue") +
labs(title = "Serie Temporal de Rentas", x = "Fecha", y = "Total de Rentas")
ggplot(data, aes(x = temp*100, y = hum*100)) +
geom_point(alpha = 0.5, color = "blue") +
labs(title = "Temperatura vs Humedad", x = "Temperatura (Celcius)", y = "Humedad (%)")
mean_registered <- mean(data$registered)
print(mean_registered)
library(shiny); runApp('C:/Users/andre/Downloads/bisection_newton.R')
runApp('C:/Users/andre/Downloads/bisection_newton.R')
runApp('C:/Users/andre/Downloads/bisection_newton.R')
runApp('C:/Users/andre/Downloads/bisection_newton.R')
runApp('C:/Users/andre/Downloads/bisection_newton.R')
runApp('C:/Users/andre/Downloads/bisection_newton.R')
file.choose()
file.choose()
runApp('C:/Users/andre/Downloads/bisection_newton.R')
file.choose()
file.choose()
reticulate::py_config()
q()
shiny::runApp('C:/Users/andre/Downloads/Lab 1 Andrea Hernandez')
runApp('C:/Users/andre/Downloads/Lab 1 Andrea Hernandez')
runApp('C:/Users/andre/Downloads/Lab 1 Andrea Hernandez')
runApp('C:/Users/andre/Downloads/Lab 1 Andrea Hernandez')
runApp('C:/Users/andre/Downloads/Lab 1 Andrea Hernandez')
runApp('C:/Users/andre/Downloads/Lab 1 Andrea Hernandez')
shiny::runApp('C:/Users/andre/Downloads/Lab 1 Andrea Hernandez')
runApp('C:/Users/andre/Downloads/Lab 1 Andrea Hernandez')
runApp('C:/Users/andre/Downloads/Lab 1 Andrea Hernandez')
runApp('C:/Users/andre/Downloads/Lab 1 Andrea Hernandez')
runApp('C:/Users/andre/Downloads/Lab 1 Andrea Hernandez')
